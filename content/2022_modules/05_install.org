#+title: Local installation
#+description: (Optional)
#+colordes: #999999
#+slug: 05_install
#+weight: 5

{{<br>}}
/Installing PyTorch on your machine is entirely optional as you can run everything on the training cluster. If you would like to practice on your machine in addition to (or instead of) the training cluster, this lesson will guide you through the setup of your machine. Please note that we won't be debugging local installations./

* Python and package manager

First of all, you need *Python 3.7 or higher* and *a package manager* (to install Python packages).

There are many ways to go about this. *For those new to Python, I suggest installing [[https://en.wikipedia.org/wiki/Anaconda_(Python_distribution)][Anaconda]]:*

Go to the ~Anaconda Installers~ section at the bottom of [[https://www.anaconda.com/products/individual][this page]], download and install the 64-Bit installer for your operating system (unless you still have a 32-Bit version of Windows of course, but those are becoming rare).

/Notes:/

- Anaconda is extremely convenient on personal computers. It is also huge since it installs a whole suite of scientific Python packages. If you are looking for a much leaner installation than Anaconda, [[https://docs.conda.io/en/latest/miniconda.html][Miniconda3]] will only install Python 3.7, the package manager conda, and their dependencies.

- Those on Linux, depending on their distro, can also install Python packages with their distribution package manager.

- *While Anaconda is a good option on personal computers, this is NOT the way to go once you move to the Compute Canada clusters.*

* Python packages

Then, you need the following Python packages: numpy, matplotlib, torch, torchvision, and torchaudio.

** Matplotlib

Matplotlib is already packaged with Anaconda. So if you installed Anaconda as suggested above, you are done. Those who chose an alternative method can find information on how to install Matplotlib [[https://matplotlib.org/users/installing.html][here]].

** PyTorch and TorchVision

Use [[https://pytorch.org/get-started/locally/][this page]] to find the command you need to run based on your operating system and whether or not you have CUDA (this only concerns you if you have an Nvidia GPU).

I recommend using the *Stable (1.5) build*.

/Examples:/

- You are on Windows, you installed Anaconda as suggested above, and you do not have CUDA, then:

Launch the ~Anaconda Prompt~ (for instance by typing it in the main Windows search box or by going to ~Start~ | ~Anaconda3~ | ~Anaconda Prompt~) and type:

#+BEGIN_src sh
conda install pytorch torchvision cpuonly -c pytorch
#+END_src

- You are on a Mac and you do not have CUDA, then run in Terminal:

#+BEGIN_src sh
conda install pytorch torchvision -c pytorch
#+END_src

- Etc.


*** Test the installation

Make sure that all works by launching Python, loading the ~torch~ package and creating a 2-dimensional tensor filled with zeros:

{{<i>}}
#+BEGIN_src python
import torch

print(torch.zeros(3, 4))
#+END_src

{{<o>}}
#+BEGIN_src python
tensor([[0., 0., 0., 0.],
        [0., 0., 0., 0.],
        [0., 0., 0., 0.]])
#+END_src

{{<notes2>}}
If you have a CUDA-enabled GPU on your machine and you want to test whether it is accessible to PyTorch, you can run:
{{</notes2>}}

{{<i>}}
#+BEGIN_src python
print(torch.cuda.is_available())
#+END_src

{{<o>}}
#+BEGIN_src python
True
#+END_src

* Comments & questions
