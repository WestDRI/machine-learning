#+title: Jupyter tips
#+description: Zoom
#+colordes: #e86e0a
#+slug: 10_jupyter
#+weight: 10

* Zoom session 3, part 2

#+BEGIN_def
/Topic:/ {{<m>}} Tips while working in Jupyter, some of which specific to fastai.
#+END_def

* Summary

Jupyter comes with a couple of convenient functionalities.\\
The fastai library adds a few more to that.

#+BEGIN_note
Here, I am using the fastai convenience function untar_data (which downloads and extract datasets from urls) as example.

If you want to run these snippets, make sure that you have already loaded that function, for instance by running:

#+BEGIN_src python
from fastai.vision.all import *
#+END_src
#+END_note

** Help (also in Python shell)

~help~ is a Python built-in function (it is a wrapper around ~pydoc.help~) which provides some help on code elements (functions, etc.). While other tips presented here only work on Jupyter, this also works in the Python shell:

#+BEGIN_src python
help(untar_data)
#+END_src

** Autocompletion

Pressing ~Tab~ after a few characters of code autocompletes or displays available options.

** Function arguments

Pressing ~Shift+Tab~ inside the parentheses of a function opens a popup showing all the function arguments and their default values (if any).

** Information

In Jupyter, you can access information on a Python element by prepending or appending a question mark to it:

#+BEGIN_src python
?untar_data
untar_data?
#+END_src

** Source code

By using two question marks, you can see the source code:

#+BEGIN_src python
??untar_data
untar_data??
#+END_src

** High-level description & link to online documentation (fastai only)

A convenient way to access the online documentation page of any fastai code element is to use the fastai function ~doc~:

#+BEGIN_src python
doc(untar_data)
#+END_src

* Comments & questions
